/**
 * Harmony Connect
 * An easy to use API that helps you access the Factom blockchain.
 *
 * OpenAPI spec version: 1.0.17
 * Contact: harmony-support@factom.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
* This information will be used to create a new entry.
*/
export class EntryCreate {
    /**
    * Tags that can be used to identify your entry. You can search for records that contain a particular `external_id` using Connect. External IDs should be sent in Base64.
    */
    'externalIds': Array<string>;
    /**
    * This is the data that will be stored directly on the blockchain. Please be sure that no private information is entered here. Content should be sent in Base64 format.
    */
    'content': string;
    /**
    * The address you'd like the callback to be sent to. If this is not specified, callbacks will not activate.
    */
    'callbackUrl'?: string;
    /**
    * The immutability stages you'd like to be notified about. This list can include any or all of the three stages: `replicated`, `factom`, and `anchored`. If callbacks are activated and this field is not sent, it will default to `factom` and `anchored`
    */
    'callbackStages'?: Array<string>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "externalIds",
            "baseName": "external_ids",
            "type": "Array<string>"
        },
        {
            "name": "content",
            "baseName": "content",
            "type": "string"
        },
        {
            "name": "callbackUrl",
            "baseName": "callback_url",
            "type": "string"
        },
        {
            "name": "callbackStages",
            "baseName": "callback_stages",
            "type": "Array<string>"
        }    ];

    static getAttributeTypeMap() {
        return EntryCreate.attributeTypeMap;
    }
}


/**
 * Harmony Connect
 * An easy to use API that helps you access the Factom blockchain.
 *
 * OpenAPI spec version: 1.0.17
 * Contact: harmony-support@factom.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AllInfo', 'model/AllInfoLinks', 'model/Chain', 'model/ChainCreate', 'model/ChainData', 'model/ChainDataDblock', 'model/ChainDataEblock', 'model/ChainDataEntries', 'model/ChainLink', 'model/ChainList', 'model/ChainListData', 'model/ChainShort', 'model/Entry', 'model/EntryCreate', 'model/EntryData', 'model/EntryDataDblock', 'model/EntryDataEblock', 'model/EntryList', 'model/EntryListChain', 'model/EntryListData', 'model/EntrySearchResponse', 'model/EntrySearchResponseData', 'model/EntryShort', 'model/SearchBody', 'api/ChainsApi', 'api/EntriesApi', 'api/InfoApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AllInfo'), require('./model/AllInfoLinks'), require('./model/Chain'), require('./model/ChainCreate'), require('./model/ChainData'), require('./model/ChainDataDblock'), require('./model/ChainDataEblock'), require('./model/ChainDataEntries'), require('./model/ChainLink'), require('./model/ChainList'), require('./model/ChainListData'), require('./model/ChainShort'), require('./model/Entry'), require('./model/EntryCreate'), require('./model/EntryData'), require('./model/EntryDataDblock'), require('./model/EntryDataEblock'), require('./model/EntryList'), require('./model/EntryListChain'), require('./model/EntryListData'), require('./model/EntrySearchResponse'), require('./model/EntrySearchResponseData'), require('./model/EntryShort'), require('./model/SearchBody'), require('./api/ChainsApi'), require('./api/EntriesApi'), require('./api/InfoApi'));
  }
}(function(ApiClient, AllInfo, AllInfoLinks, Chain, ChainCreate, ChainData, ChainDataDblock, ChainDataEblock, ChainDataEntries, ChainLink, ChainList, ChainListData, ChainShort, Entry, EntryCreate, EntryData, EntryDataDblock, EntryDataEblock, EntryList, EntryListChain, EntryListData, EntrySearchResponse, EntrySearchResponseData, EntryShort, SearchBody, ChainsApi, EntriesApi, InfoApi) {
  'use strict';

  /**
   * This is an automatically generated Node.js client library for Factom Harmony Connect..<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var HarmonyConnectClient = require('index'); // See note below*.
   * var xxxSvc = new HarmonyConnectClient.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new HarmonyConnectClient.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new HarmonyConnectClient.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new HarmonyConnectClient.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AllInfo model constructor.
     * @property {module:model/AllInfo}
     */
    AllInfo: AllInfo,
    /**
     * The AllInfoLinks model constructor.
     * @property {module:model/AllInfoLinks}
     */
    AllInfoLinks: AllInfoLinks,
    /**
     * The Chain model constructor.
     * @property {module:model/Chain}
     */
    Chain: Chain,
    /**
     * The ChainCreate model constructor.
     * @property {module:model/ChainCreate}
     */
    ChainCreate: ChainCreate,
    /**
     * The ChainData model constructor.
     * @property {module:model/ChainData}
     */
    ChainData: ChainData,
    /**
     * The ChainDataDblock model constructor.
     * @property {module:model/ChainDataDblock}
     */
    ChainDataDblock: ChainDataDblock,
    /**
     * The ChainDataEblock model constructor.
     * @property {module:model/ChainDataEblock}
     */
    ChainDataEblock: ChainDataEblock,
    /**
     * The ChainDataEntries model constructor.
     * @property {module:model/ChainDataEntries}
     */
    ChainDataEntries: ChainDataEntries,
    /**
     * The ChainLink model constructor.
     * @property {module:model/ChainLink}
     */
    ChainLink: ChainLink,
    /**
     * The ChainList model constructor.
     * @property {module:model/ChainList}
     */
    ChainList: ChainList,
    /**
     * The ChainListData model constructor.
     * @property {module:model/ChainListData}
     */
    ChainListData: ChainListData,
    /**
     * The ChainShort model constructor.
     * @property {module:model/ChainShort}
     */
    ChainShort: ChainShort,
    /**
     * The Entry model constructor.
     * @property {module:model/Entry}
     */
    Entry: Entry,
    /**
     * The EntryCreate model constructor.
     * @property {module:model/EntryCreate}
     */
    EntryCreate: EntryCreate,
    /**
     * The EntryData model constructor.
     * @property {module:model/EntryData}
     */
    EntryData: EntryData,
    /**
     * The EntryDataDblock model constructor.
     * @property {module:model/EntryDataDblock}
     */
    EntryDataDblock: EntryDataDblock,
    /**
     * The EntryDataEblock model constructor.
     * @property {module:model/EntryDataEblock}
     */
    EntryDataEblock: EntryDataEblock,
    /**
     * The EntryList model constructor.
     * @property {module:model/EntryList}
     */
    EntryList: EntryList,
    /**
     * The EntryListChain model constructor.
     * @property {module:model/EntryListChain}
     */
    EntryListChain: EntryListChain,
    /**
     * The EntryListData model constructor.
     * @property {module:model/EntryListData}
     */
    EntryListData: EntryListData,
    /**
     * The EntrySearchResponse model constructor.
     * @property {module:model/EntrySearchResponse}
     */
    EntrySearchResponse: EntrySearchResponse,
    /**
     * The EntrySearchResponseData model constructor.
     * @property {module:model/EntrySearchResponseData}
     */
    EntrySearchResponseData: EntrySearchResponseData,
    /**
     * The EntryShort model constructor.
     * @property {module:model/EntryShort}
     */
    EntryShort: EntryShort,
    /**
     * The SearchBody model constructor.
     * @property {module:model/SearchBody}
     */
    SearchBody: SearchBody,
    /**
     * The ChainsApi service constructor.
     * @property {module:api/ChainsApi}
     */
    ChainsApi: ChainsApi,
    /**
     * The EntriesApi service constructor.
     * @property {module:api/EntriesApi}
     */
    EntriesApi: EntriesApi,
    /**
     * The InfoApi service constructor.
     * @property {module:api/InfoApi}
     */
    InfoApi: InfoApi
  };

  return exports;
}));

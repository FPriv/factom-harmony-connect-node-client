/**
 * Harmony Connect
 * An easy to use API that helps you access the Factom blockchain.
 *
 * OpenAPI spec version: 1.0.17
 * Contact: harmony-support@factom.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/EntryListData'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./EntryListData'));
  } else {
    // Browser globals (root is window)
    if (!root.HarmonyConnectClient) {
      root.HarmonyConnectClient = {};
    }
    root.HarmonyConnectClient.EntryList = factory(root.HarmonyConnectClient.ApiClient, root.HarmonyConnectClient.EntryListData);
  }
}(this, function(ApiClient, EntryListData) {
  'use strict';



  /**
   * The EntryList model module.
   * @module model/EntryList
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>EntryList</code>.
   * A paginated list of entries.
   * @alias module:model/EntryList
   * @class
   * @param data {Array.<module:model/EntryListData>} An array that contains the entries on this page.
   * @param offset {String} The page offset. (Current page -1)
   * @param limit {String} The maximum number of entries per page.
   * @param count {String} The total number of entries seen.
   */
  var exports = function(data, offset, limit, count) {
    var _this = this;

    _this['data'] = data;
    _this['offset'] = offset;
    _this['limit'] = limit;
    _this['count'] = count;
  };

  /**
   * Constructs a <code>EntryList</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EntryList} obj Optional instance to populate.
   * @return {module:model/EntryList} The populated <code>EntryList</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('data')) {
        obj['data'] = ApiClient.convertToType(data['data'], [EntryListData]);
      }
      if (data.hasOwnProperty('offset')) {
        obj['offset'] = ApiClient.convertToType(data['offset'], 'String');
      }
      if (data.hasOwnProperty('limit')) {
        obj['limit'] = ApiClient.convertToType(data['limit'], 'String');
      }
      if (data.hasOwnProperty('count')) {
        obj['count'] = ApiClient.convertToType(data['count'], 'String');
      }
    }
    return obj;
  }

  /**
   * An array that contains the entries on this page.
   * @member {Array.<module:model/EntryListData>} data
   */
  exports.prototype['data'] = undefined;
  /**
   * The page offset. (Current page -1)
   * @member {String} offset
   */
  exports.prototype['offset'] = undefined;
  /**
   * The maximum number of entries per page.
   * @member {String} limit
   */
  exports.prototype['limit'] = undefined;
  /**
   * The total number of entries seen.
   * @member {String} count
   */
  exports.prototype['count'] = undefined;



  return exports;
}));


